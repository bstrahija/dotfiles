[
    // Go to start of file with gg
    { "key": "g g", "command": "cursorTop", "when": "vim.mode == 'Normal' && editorTextFocus" },

    // Remap cmd+f to vim /
    { "key": "cmd+f", "command": "vim.remap", "when": "editorTextFocus && (vim.mode == 'Normal' || vim.mode == 'Insert' || vim.mode == 'Visual')", "args": { "after": ["esc",  "/"] } },

    // Add new cursor below/above alt + vim keys
    { "key": "alt+j", "command": "editor.action.insertCursorBelow",  "when": "editorTextFocus && vim.mode == 'Insert'" },
    { "key": "alt+k", "command": "editor.action.insertCursorAbove",  "when": "editorTextFocus && vim.mode == 'Insert'" },

    // Projects
    { "key": "g p", "command": "projectManager.listProjects", "when": "editorTextFocus && vim.mode == 'Normal'" },

    // Closing tabs
    { "key": "g w w", "command": "workbench.action.closeActiveEditor", "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g w o", "command": "workbench.action.closeOtherEditors", "when": "vim.mode == 'Normal' && editorTextFocus" },

    // Sidebars
    { "key": "cmd+r", "command": "workbench.action.toggleSidebarVisibility" },
    { "key": "cmd+b", "command": "workbench.action.toggleAuxiliaryBar" },

    // Multi-cursor with ctrl+n
    { "key": "ctrl+n", "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },

    // Navigate tabs
    { "key": "ctrl+[", "command": "workbench.action.previousEditorInGroup" },
    { "key": "ctrl+]", "command": "workbench.action.nextEditorInGroup" },
    { "key": "cmd+1", "command": "workbench.action.openEditorAtIndex1" },
    { "key": "cmd+8", "command": "workbench.action.openEditorAtIndex2" },
    { "key": "cmd+3", "command": "workbench.action.openEditorAtIndex3" },
    { "key": "cmd+4", "command": "workbench.action.openEditorAtIndex4" },
    { "key": "cmd+5", "command": "workbench.action.openEditorAtIndex5" },
    { "key": "cmd+6", "command": "workbench.action.openEditorAtIndex6" },
    { "key": "cmd+7", "command": "workbench.action.openEditorAtIndex7" },
    { "key": "cmd+8", "command": "workbench.action.openEditorAtIndex8" },
    { "key": "cmd+9", "command": "workbench.action.openEditorAtIndex9" },

    // Splits
    { "key": "g \\",      "command": "workbench.action.splitEditor",      "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g -",       "command": "workbench.action.splitEditorDown",  "when": "vim.mode == 'Normal' && editorTextFocus" },

    // Ctrl-backspace to act as delete key
    { "key": "ctrl+backspace", "command": "deleteRight", "when": "editorTextFocus && vim.mode == 'Insert'" },

    // Navigate panes with vim keys
    { "key": "ctrl+h", "command": "workbench.action.navigateLeft",  "when": "(vim.mode == 'Normal || vim.mode == 'Visual) && editorTextFocus" },
    { "key": "ctrl+l", "command": "workbench.action.navigateRight", "when": "(vim.mode == 'Normal || vim.mode == 'Visual) && editorTextFocus" },
    { "key": "ctrl+j", "command": "workbench.action.navigateDown",  "when": "(vim.mode == 'Normal || vim.mode == 'Visual) && editorTextFocus" },
    { "key": "ctrl+k", "command": "workbench.action.navigateUp",    "when": "(vim.mode == 'Normal || vim.mode == 'Visual) && editorTextFocus" },

    // Select auto suggest with j/k
    { "key": "ctrl+j", "command": "selectNextCodeAction", "when": "codeActionMenuVisible" },
    { "key": "ctrl+k", "command": "selectPrevCodeAction", "when": "codeActionMenuVisible" },
    { "key": "ctrl+j", "command": "selectNextSuggestion", "when": "suggestWidgetVisible && textInputFocus" },
    { "key": "ctrl+k", "command": "selectPrevSuggestion", "when": "suggestWidgetVisible && textInputFocus" },

    // Project pane (file explorer) file management
    { "key": "cmd+r",   "command": "runCommands", "args": { "commands": ["workbench.action.toggleSidebarVisibility", "workbench.files.action.focusFilesExplorer"] }, "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus" },
    { "key": "ctrl+s",  "command": "workbench.action.toggleSidebarVisibility", "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus" },
    { "key": "r",       "command": "renameFile",                "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "c",       "command": "filesExplorer.copy",        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "p",       "command": "filesExplorer.paste",       "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "x",       "command": "filesExplorer.cut",         "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "d",       "command": "moveFileToTrash",           "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "shift-d", "command": "deleteFile",                "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "a",       "command": "explorer.newFile",          "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "shift-a", "command": "explorer.newFolder",        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "s",       "command": "explorer.openToSide",       "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    { "key": "enter",   "command": "explorer.openAndPassFocus", "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus" },
    { "key": "enter",   "command": "list.toggleExpand",         "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus" },

    // Navigate quick input with tab key
    { "key": "tab",    "command": "quickInput.next",     "when": "inQuickInput && quickInputType == 'quickPick'" },
    { "key": "ctrl+j", "command": "quickInput.next",     "when": "inQuickInput && quickInputType == 'quickPick'" },
    { "key": "ctrl+k", "command": "quickInput.previous", "when": "inQuickInput && quickInputType == 'quickPick'" },

    // Show quick suggestions
    { "key": "ctrl+.", "command": "editor.action.triggerSuggest", "when": "vim.mode == 'Insert' && editorTextFocus" },

    // Errors and warnings
    { "key": "g e [",       "command": "editor.action.marker.prevInFiles", "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g e ]",       "command": "editor.action.marker.nextInFiles", "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g [",         "command": "editor.action.marker.prev",        "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g ]",         "command": "editor.action.marker.next",        "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g e a",       "command": "workbench.action.problems.focus",  "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g e e",       "command": "workbench.action.problems.focus",  "when": "vim.mode == 'Normal' && editorTextFocus" },

    // AI
    { "key": "g x",           "command": "workbench.panel.chat.view.copilot.focus",  "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "ctrl+x ctrl+x", "command": "editor.action.inlineSuggest.trigger",      "when": "vim.mode == 'Insert' && editorTextFocus && vim.active" },
    { "key": "ctrl+x ctrl+n", "command": "editor.action.inlineSuggest.showNext",     "when": "vim.mode == 'Insert' && editorTextFocus" },
    { "key": "ctrl+x ctrl+p", "command": "editor.action.inlineSuggest.showPrevious", "when": "vim.mode == 'Insert' && editorTextFocus" },
    { "key": "ctrl+x ctrl+a", "command": "inlineChat.start",                         "when": "vim.mode == 'Insert' && editorTextFocus && vim.active" },

    // Toggle comments in normal and visual mode
    { "key": "g c", "command": "editor.action.commentLine", "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && editorTextFocus" },

    // Search
    { "key": "ctrl+enter", "command": "editor.action.openLink", "when": "editorTextFocus" },

    // Code navigation and actions
    { "key": "g d",       "command": "editor.action.revealDefinition",        "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g shift+d", "command": "editor.action.revealDefinitionAside",   "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g i",       "command": "editor.action.goToImplementation",      "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g h",       "command": "editor.action.showHover",               "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g t",       "command": "editor.action.goToTypeDefinition",      "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g r",       "command": "editor.action.referenceSearch.trigger", "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g a",       "command": "editor.action.quickFix",                "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g shift+r", "command": "editor.action.rename",                  "when": "vim.mode == 'Normal' && editorTextFocus" },
    { "key": "g s",       "command": "tettekete.list-functions",              "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)" },
    { "key": "g o",       "command": "workbench.action.gotoSymbol",           "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)" },

    // Source control
    { "key": "g shift+G", "command": "workbench.view.scm", "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)" },

    // Adding new lines above and below
    { "key": "shift+enter",      "command": "editor.action.insertLineAfter",  "when": "editorTextFocus && (vim.mode == 'Normal' || vim.mode == 'Insert')" },
    { "key": "ctrl+shift+enter", "command": "editor.action.insertLineBefore", "when": "editorTextFocus && (vim.mode == 'Normal' || vim.mode == 'Insert')" },

    // Move left/right in insert mode with alt+arrows, begin/end with ctrl
    { "key": "alt+l",  "command": "cursorWordEndRight",  "when": "editorTextFocus && vim.mode == 'Insert'" },
    { "key": "alt+h",  "command": "cursorWordStartLeft", "when": "editorTextFocus && vim.mode == 'Insert'" },
    { "key": "ctrl+l", "command": "cursorLineEnd",       "when": "editorTextFocus && vim.mode == 'Insert'" },
    { "key": "ctrl+h", "command": "cursorLineStart",     "when": "editorTextFocus && vim.mode == 'Insert'" },

    // Move current line up/down with vim arrows
    { "key": "alt+j", "command": "editor.action.moveLinesDownAction",    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine') && editorTextFocus" },
    { "key": "alt+k", "command": "editor.action.moveLinesUpAction",      "when": "(vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine') && editorTextFocus" },

    // Zen mode
    { "key": "g z", "command": "workbench.action.toggleZenMode", "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)" },

    // Accepting suggestions
    { "key": "ctrl+y", "command": "editor.action.inlineSuggest.commit",     "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible" },
    { "key": "ctrl+y", "command": "editor.action.inlineSuggest.commit",     "when": "inInlineEditsPreviewEditor" },
    { "key": "ctrl+y", "command": "editor.emmet.action.expandAbbreviation", "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
    { "key": "ctrl+y", "command": "acceptSelectedSuggestion",               "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus" },

    // ==========================================
    // These are removed
    // ==========================================
    { "key": "alt+cmd+left", "command": "-workbench.action.previousEditor" },
    { "key": "cmd+r", "command": "-workbench.action.toggleAuxiliaryBar" },
    { "key": "cmd+b", "command": "-workbench.action.toggleSidebarVisibility" },
    { "key": "cmd+r", "command": "-workbench.action.reloadWindow", "when": "isDevelopment" },
    { "key": "cmd+r", "command": "-workbench.action.terminal.runRecentCommand", "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'" },
    { "key": "cmd+r", "command": "-inlineChat.regenerate", "when": "inlineChatHasProvider && inlineChatVisible" },
    { "key": "cmd+r", "command": "-workbench.action.terminal.chat.rerunRequest", "when": "chatIsEnabled && terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || chatIsEnabled && terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest" },
    { "key": "alt+cmd+b", "command": "-workbench.action.toggleAuxiliaryBar" },
    { "key": "ctrl+]", "command": "-extension.vim_ctrl+]", "when": "editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl" },
    { "key": "alt+cmd+right", "command": "-workbench.action.nextEditor" },
    { "key": "ctrl+x", "command": "-extension.vim_ctrl+x", "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl" },
    { "key": "tab", "command": "-editor.action.inlineSuggest.jump", "when": "inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible" },
    { "key": "tab", "command": "-insertBestCompletion", "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'" },
    { "key": "tab", "command": "-insertNextSuggestion", "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'" },
    { "key": "tab", "command": "-insertSnippet", "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    }
]
