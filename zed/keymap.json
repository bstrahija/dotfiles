[
    // Global keybindings
    {
        "context": "Workspace",
        "bindings": {
            "shift shift": "file_finder::Toggle",

            // Opent recent projects in same window
            "alt-cmd-p": [
                "projects::OpenRecent",
                { "create_new_window": false }
            ]
        }
    },
    {
        "context": "VimControl || !Editor && !Terminal",
        "bindings": {
            // Activate panes/docks with vim arrows
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight",
            "ctrl-k": "workspace::ActivatePaneUp",
            "ctrl-j": "workspace::ActivatePaneDown"
        }
    },

    // Normal mode
    {
        "context": "Editor && vim_mode == normal",
        "bindings": {
            // 0 and $ dont make sense, so go to begining and end of line
            "g h": "vim::StartOfLineDownward",
            "g l": "vim::EndOfLineDownward",

            // Finding files
            "space space": "file_finder::Toggle",
            "space f": "file_finder::Toggle",

            // Copy until end of line
            "shift-y": ["workspace::SendKeystrokes", "y $"],

            // Select next match
            "g n": "editor::SelectNext",

            // Code navigation and actions
            "g d": "editor::GoToDefinition",
            "g shift-d": "editor::GoToDeclaration",
            "g y": "editor::GoToTypeDefinition",
            "g i": "editor::GoToImplementation",
            "space .": "editor::ToggleCodeActions",

            // Show all errors
            "space d": "diagnostics::Deploy",

            // Comments
            "g c": ["editor::ToggleComments", { "advance_downwards": false }],

            // Lines
            "shift-enter": "editor::NewlineBelow",
            "ctrl-shift-enter": "editor::NewlineAbove",

            // Spliting panes
            "space s": "pane::SplitRight",
            "space S": "pane::SplitDown",

            // Git
            "space g": "git_panel::ToggleFocus",

            // AI Agent
            "space a": "agent::ToggleFocus",

            // Close all other files
            "space o": "pane::CloseOtherItems"
        }
    },
    {
        "context": "Editor && vim_mode == normal && vim_operator == none && !VimWaiting",
        "bindings": {
            // Move between tabs
            "H": "pane::ActivatePreviousItem",
            "L": "pane::ActivateNextItem"
        }
    },

    // Insert mode
    {
        "context": "Editor && vim_mode == insert",
        "bindings": {
            "j k": "vim::NormalBefore",
            "j j": "vim::NormalBefore",

            // AI suggestion and incline editing
            "ctrl-x ctrl-x": "editor::ShowEditPrediction",
            "ctrl-x ctrl-a": "assistant::InlineAssist",
            "ctrl-x ctrl-c": "editor::ShowCompletions",

            // Move and select in insert mode
            "alt-h": "editor::MoveLeft",
            "alt-l": "editor::MoveRight",
            "alt-k": "editor::MoveUp",
            "alt-j": "editor::MoveDown",
            "alt-shift-h": "editor::SelectLeft",
            "alt-shift-l": "editor::SelectRight",
            "alt-shift-k": "editor::SelectUp",
            "alt-shift-j": "editor::SelectDown"
        }
    },
    {
        "context": "vim_mode == insert && editor_has_snippet_completions",
        "bindings": {
            "tab": "editor::ShowWordCompletions"
        }
    },

    // Visual mode
    {
        "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
        "bindings": {
            // Moving lines around in visual mode
            "shift-K": "editor::MoveLineUp",
            "shift-J": "editor::MoveLineDown",
            "shift-up": "editor::MoveLineUp",
            "shift-down": "editor::MoveLineDown"
        }
    },

    // Manage files in project panel (file tree)
    {
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "a": "project_panel::NewFile",
            "A": "project_panel::NewDirectory",
            "p": "project_panel::Paste",
            "x": "project_panel::Cut",
            "s": "project_panel::Open",
            "c": "project_panel::Copy",
            "r": "project_panel::Rename",
            "d": "project_panel::Trash",
            "shift-d": "project_panel::Delete"
        }
    },

    // Markdown
    {
        "context": "Editor && (vim_mode == normal || vim_mode == visual) && vim_operator == none && !VimWaiting",
        "bindings": {
            "space m p": "markdown::OpenPreview",
            "space m P": "markdown::OpenPreviewToTheSide"
        }
    },

    // Empty screen
    {
        "context": "EmptyPane || SharedScreen",
        "bindings": {
            "space f": "file_finder::Toggle",
            "space space": "file_finder::Toggle",
            "shift-shift": "file_finder::Toggle"
        }
    }
]
