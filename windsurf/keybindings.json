// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "alt+enter",
        "command": "-notebook.cell.executeAndInsertBelow",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
    },
    {
        "key": "alt+enter",
        "command": "-debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "alt+enter",
        "command": "-testing.editFocusedTest",
        "when": "focusedView == 'workbench.view.testing'"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "shift+f10",
        "command": "-editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+1",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+l",
        "command": "turboConsoleLog.displayLogMessage"
    },
    {
        "key": "cmd+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+shift+[Backquote]",
        "command": "terminal.focus"
    },
    {
        "key": "ctrl+shift+[Backquote]",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "cmd+shift+a",
        "command": "wwm.aligncode",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+u",
        "command": "pro-deployer.upload"
    },
    {
        "key": "alt+u",
        "command": "-pro-deployer.upload"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "alt+cmd+a",
        "command": "vscode-better-align.align",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+a",
        "command": "-vscode-better-align.align",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+[Semicolon]",
        "command": "aichat.focuschatpaneaction"
    },
    {
        "key": "ctrl+alt+cmd+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+right",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+r ctrl+alt+cmd+[Backslash]",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+alt+a",
        "command": "-namespaceResolver.importAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+a",
        "command": "-laraphense.importAll",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+l",
        "command": "windsurf.prioritized.chat.open"
    },
    {
        "key": "cmd+l",
        "command": "-windsurf.prioritized.chat.open",
        "when": "!terminalFocus"
    }
]
